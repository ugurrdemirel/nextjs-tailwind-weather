import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { IWeatherSuccessRes, getWeather } from '@/server/weather'
import { GetServerSideProps } from 'next'
import Weather from '@/component/weather'

const inter = Inter({ subsets: ['latin'] })

// server side props will return IWeatherSuccessRes or null to component as prop
export const getServerSideProps: GetServerSideProps<IWeatherSuccessRes> = async (context) => {
    // check [city] param exits
    if (context.params?.city) {
        // get weather data from api
        const w = await getWeather({
            lang: context.req.headers['accept-language'] || "en", // get browser language from headers. default value is en
            city: context.params.city as string
          })

          // check w contains weather data
          if(w && w.result.length > 0){
            return {
                props: w
              }    
          }else{
            return {
                notFound: true
            }
          }
    }

    // return not found page beacuse request doesn't have city param
    return {
        notFound: true
    }
}

export default function WeatherPage(props: IWeatherSuccessRes) {
    const today = props.result[0]
    const weather = [...props.result].slice(1)
    console.log(props)

    function renderWeather(){
        return weather.map((items, id) =>
            <Weather key={id} {...items} isToday={false} city={props.city} />
        )
    }

    return (
        <>
            <Head>
                <title>{props.city.charAt(0).toUpperCase() + props.city.slice(1)} Hava Durumu</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="min-h-[90vh] flex flex-col justify-center items-center">
                <Weather {...today} isToday={true} city={props.city} className={"min-w-[100%] sm:max-w-full sm:min-w-[50%]"} />
                <div className='w-full flex flex-row flex-wrap gap-5 mt-5'>
                    {renderWeather()}
                </div>
            </div>
        </>
    )
}
